import React, { useState, useRef } from 'react'
import { Check, Plus, X } from 'lucide-react'
import { ImageUploadWithRecognition, ImageUploadWithRecognitionRef } from '../components/ImageUploadWithRecognition'
import { AddToolModal } from '../components/AddToolModal'
import { ReturnResultsDialog } from '../components/ReturnResultsDialog'
import { ConfidenceBlock } from '../components/ConfidenceBlock'
import { DetectedTool } from '../types'
import { useToolRecognition } from '../hooks/useToolRecognition'
import { useConfidence } from '../hooks/useConfidence'
import { useReturnStore } from '../store/returnStore'
import { returnService, ReturnResult } from '../services/returnService'
import { ComparisonResult } from '../store/returnStore'

export const ReturnPage = () => {
  const [detectedTools, setDetectedTools] = useState<DetectedTool[]>([])
  const [isScanning, setIsScanning] = useState(false)
  const [scanComplete, setScanComplete] = useState(false)
  const [isAddToolModalOpen, setIsAddToolModalOpen] = useState(false)
  const [returnResult, setReturnResult] = useState<ReturnResult | null>(null)
  const [showReturnDialog, setShowReturnDialog] = useState(false)
  const imageUploadRef = useRef<ImageUploadWithRecognitionRef>(null)

  const {
    recognizeTools
  } = useToolRecognition()

  const { confidence, updateConfidence } = useConfidence()

  const { 
    showResultsDialog, 
    setShowResultsDialog, 
    uploadedImages, 
    setUploadedImages,
    addUploadedImage,
    removeUploadedImage,
    imageMLResults,
    setImageMLResults,
    addImageMLResult,
    comparisonResult,
    setComparisonResult,
    reset: resetStore
  } = useReturnStore()

  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  React.useEffect(() => {
    console.log('üîÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–¥–∞—á–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–∞, –æ—á–∏—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ...')
    setDetectedTools([])
    setScanComplete(false)
    setIsScanning(false)
    setUploadedImages([])
    setImageMLResults([])
    setComparisonResult(null)
    resetStore()
  }, [])

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  const handleScanComplete = async () => {
    if (uploadedImages.length === 0) {
      console.log('‚ùå –ù–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π')
      return
    }
    
    console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...')
    console.log('üì∏ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏:', uploadedImages.length)
    console.log('üßπ –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã...')
    setDetectedTools([]) // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
    setScanComplete(false) // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    setIsScanning(true) // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    
    try {
      const allDetectedTools: DetectedTool[] = []
      const allImageMLResults: Array<{fileName: string, result: ReturnResult}> = []
      let processedImageUrl: string | undefined
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
      for (let i = 0; i < uploadedImages.length; i++) {
        const imageData = uploadedImages[i]
        console.log(`üîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${i + 1}/${uploadedImages.length}: ${imageData.fileName}`)
        
        // –°–æ–∑–¥–∞–µ–º File –æ–±—ä–µ–∫—Ç –∏–∑ URL
        const response = await fetch(imageData.url)
        const blob = await response.blob()
        const file = new File([blob], imageData.fileName, { type: blob.type })
        
        // –†–∞—Å–ø–æ–∑–Ω–∞–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
        const tools = await recognizeTools(file)
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ ${i + 1}:`, tools.length)
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∫ –æ–±—â–µ–º—É —Å–ø–∏—Å–∫—É
        allDetectedTools.push(...tools)
        
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º DetectedTool –≤ —Ñ–æ—Ä–º–∞—Ç ReturnResult –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        const returnResult: ReturnResult = {
          returned_tools: tools.map(tool => ({
            id: parseInt(tool.id.replace(/\D/g, '')) || Math.random(),
            name: tool.name,
            serial_number: tool.serialNumber || '',
            category: tool.category || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
          })),
          hand_check: tools.length !== 11, // –ï—Å–ª–∏ –Ω–µ 11 –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤, –Ω—É–∂–Ω–∞ —Ä—É—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
          processed_image_url: processedImageUrl,
          ml_predictions: tools.map(() => Math.random())
        }
        
        allImageMLResults.push({
          fileName: imageData.fileName,
          result: returnResult
        })
      }
      
      console.log('üéØ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤:', allDetectedTools.length)
      console.log('üìã –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤:', allDetectedTools)
      
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º DetectedTool –≤ —Ñ–æ—Ä–º–∞—Ç ReturnResult –¥–ª—è –æ–±—â–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
      const finalReturnResult: ReturnResult = {
        returned_tools: allDetectedTools.map(tool => ({
          id: parseInt(tool.id.replace(/\D/g, '')) || Math.random(),
          name: tool.name,
          serial_number: tool.serialNumber || '',
          category: tool.category || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
        })),
        hand_check: allDetectedTools.length !== 11, // –ï—Å–ª–∏ –Ω–µ 11 –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤, –Ω—É–∂–Ω–∞ —Ä—É—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        processed_image_url: processedImageUrl,
        ml_predictions: allDetectedTools.map(() => Math.random())
      }
      
      // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å –≤—ã–¥–∞–Ω–Ω—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏
      console.log('üîç –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å –≤—ã–¥–∞–Ω–Ω—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏...')
      try {
        const comparison = await returnService.compareWithIssued(
          finalReturnResult.returned_tools,
          1, // userId
          1  // toolkitId
        )
        console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è:', comparison)
        setComparisonResult(comparison)
        finalReturnResult.comparison_result = comparison
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å –≤—ã–¥–∞–Ω–Ω—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏:', error)
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
      }
      
      setDetectedTools(allDetectedTools)
      setReturnResult(finalReturnResult)
      setImageMLResults(allImageMLResults)
      setScanComplete(true)
      setIsScanning(false)
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
      setShowReturnDialog(true)
      setShowResultsDialog(true)
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è:', error)
      setIsScanning(false)
      setScanComplete(false)
    }
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—á–∞–ª–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  const handleStartScan = () => {
    setIsScanning(true)
    setScanComplete(false)
    console.log('–ù–∞—á–∞—Ç–æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Å–¥–∞—á–∏...')
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –≤—Ä—É—á–Ω—É—é
  const handleAddManual = () => {
    console.log('–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –≤—Ä—É—á–Ω—É—é...')
    setIsAddToolModalOpen(true)
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –∏–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  const handleAddTool = (toolName: string, quantity: number) => {
    console.log('–î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç:', toolName, '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:', quantity)
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç
    const newTool: DetectedTool = {
      id: `manual_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
      name: toolName,
      confidence: 1.0, // 100% —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
      quantity: quantity,
      category: toolName,
      condition: 'good' // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ö–æ—Ä–æ—à–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º
    setDetectedTools(prev => [...prev, newTool])
    setScanComplete(true) // –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
  const handleFileRemoved = () => {
    console.log('üóëÔ∏è –§–æ—Ç–æ —É–¥–∞–ª–µ–Ω–æ, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ...')
    setDetectedTools([]) // –û–±–Ω—É–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
    setScanComplete(false) // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    setIsScanning(false) // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    setUploadedImages([]) // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    setImageMLResults([]) // –û—á–∏—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã ML
    setComparisonResult(null) // –û—á–∏—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const handleImageAdded = (imageUrl: string, fileName: string) => {
    console.log('üì∏ –î–æ–±–∞–≤–ª–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:', fileName)
    addUploadedImage({ url: imageUrl, fileName })
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const handleImageRemove = (index: number) => {
    console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:', index)
    console.log('üìä –¢–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', uploadedImages)
    removeUploadedImage(index)
    
    // –ï—Å–ª–∏ —É–¥–∞–ª–∏–ª–∏ –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    if (uploadedImages.length <= 1) {
      setDetectedTools([])
      setScanComplete(false)
      setIsScanning(false)
      setImageMLResults([])
      setComparisonResult(null)
    }
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞
  const handleToolRemove = (toolId: string) => {
    console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç:', toolId)
    setDetectedTools(prev => {
      const newList = prev.filter(tool => tool.id !== toolId)
      console.log('üìä –ù–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤:', newList)
      
      // –ï—Å–ª–∏ —É–¥–∞–ª–∏–ª–∏ –≤—Å–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
      if (newList.length === 0) {
        setScanComplete(false)
        setComparisonResult(null)
      }
      
      return newList
    })
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –¥–∏–∞–ª–æ–≥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  const handleReturnDialogClose = () => {
    setShowReturnDialog(false)
    setShowResultsDialog(false)
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–¥–∞—á–∏
  const handleReturnConfirm = async () => {
    console.log('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ —Å–¥–∞—á–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤')
    
    if (returnResult) {
      try {
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–¥–∞—á—É —á–µ—Ä–µ–∑ API
        const processResult = await returnService.processReturn(
          returnResult.returned_tools,
          1, // userId
          1, // toolkitId
          returnResult.processed_image_url,
          returnResult.hand_check
        )
        
        console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–¥–∞—á–∏:', processResult)
        
        if (processResult.success) {
          console.log('‚úÖ –°–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞')
          // –ú–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
        } else {
          console.log('‚ö†Ô∏è –°–¥–∞—á–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏')
        }
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–¥–∞—á–∏:', error)
      }
    }
    
    setShowReturnDialog(false)
    setShowResultsDialog(false)
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
  }

  return (
    <div className="p-8">
      <div className="max-w-7xl mx-auto">
        {/* Main Title */}
        <div className="mb-12">
          <h1 className="text-[52px] font-semibold text-[#262626] leading-tight" style={{ fontFamily: 'Inter, system-ui, sans-serif' }}>
            –°–¥–∞—á–∞<br />–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
          </h1>
        </div>

        {/* Cards */}
        <div className="flex justify-center mb-8 mt-28">
          <div className="flex gap-8">
            {/* –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ Card */}
            <div className="bg-white rounded-2xl shadow-lg overflow-hidden w-[520px] h-[420px] flex flex-col zoom-in-animation" style={{ animationDelay: '0.1s' }}>
              <div className="px-6 pt-1 pb-0.5 flex items-center justify-center flex-shrink-0">
                <object 
                  data="/assets/loadphoto.svg" 
                  type="image/svg+xml"
                  width="480" 
                  height="170"
                  style={{ 
                    maxWidth: '100%',
                    height: 'auto'
                  }}
                >
                  <img 
                    src="/assets/loadphoto.svg" 
                    alt="–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ" 
                    width="480" 
                    height="170"
                  />
                </object>
              </div>
              
              {/* File Upload Area —Å —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ–º */}
              <div className="px-6 pt-0 pb-4 flex flex-col items-center flex-1">
                <div className="w-full max-w-lg flex flex-col items-center">
                  <ImageUploadWithRecognition
                    ref={imageUploadRef}
                    onToolsDetected={(tools, confidence) => {
                      console.log('üì• –ü–æ–ª—É—á–µ–Ω—ã –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –≤ ReturnPage:', tools, '–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å:', confidence)
                      console.log('üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤:', tools.length)
                      console.log('üîç –î–µ—Ç–∞–ª–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤:', tools.map(t => ({ name: t.name, id: t.id })))
                      setDetectedTools(tools)
                      setScanComplete(true)
                      setIsScanning(false) // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
                    }}
                    onScanStart={handleStartScan}
                    onScanError={(error) => {
                      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:', error)
                      setIsScanning(false) // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏ –æ—à–∏–±–∫–µ
                      setScanComplete(false)
                    }}
                    onFileRemoved={handleFileRemoved}
                    onImageAdded={handleImageAdded}
                    className="w-[420px] h-40"
                  />
                </div>
              </div>
            </div>

            {/* –°–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ */}
            <div className="bg-white rounded-2xl shadow-lg overflow-hidden w-[520px] min-h-[420px] flex flex-col zoom-in-animation transition-all duration-700 ease-out" style={{ animationDelay: '0.2s' }}>
              <div className="px-6 py-2 flex items-center justify-center">
                <object 
                  data="/assets/instruments_list.svg" 
                  type="image/svg+xml"
                  width="480" 
                  height="170"
                  style={{ 
                    maxWidth: '100%',
                    height: 'auto'
                  }}
                >
                  <img 
                    src="/assets/instruments_list.svg" 
                    alt="–°–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤" 
                    width="480" 
                    height="170"
                  />
                </object>
              </div>
              
              <div className="px-6 pt-0 pb-4 flex-1 -mt-8 flex flex-col justify-between">
                {/* –ú–∏–Ω–∏–∞—Ç—é—Ä—ã –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */}
                {uploadedImages.length > 0 && (
                  <div className="mb-4">
                    <h3 className="text-sm font-medium text-gray-700 mb-2">–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:</h3>
                    <div className="flex gap-2 flex-wrap">
                      {uploadedImages.map((image, index) => (
                        <div key={index} className="relative group">
                          <img
                            src={image.url}
                            alt={image.fileName}
                            className="w-16 h-16 object-cover rounded-lg border-2 border-gray-200 shadow-sm"
                          />
                          <button
                            onClick={(e) => {
                              e.stopPropagation()
                              handleImageRemove(index)
                            }}
                            className="absolute -top-1 -right-1 bg-red-500 text-white rounded-full p-1 hover:bg-red-600 transition-all duration-200 opacity-70 hover:opacity-100 z-10"
                            title="–£–¥–∞–ª–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
                          >
                            <X className="w-3 h-3" />
                          </button>
                          <div className="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-20 rounded-lg transition-all duration-200 flex items-center justify-center">
                            <span className="text-white text-xs opacity-0 group-hover:opacity-100 transition-opacity duration-200">
                              {image.fileName.length > 10 ? image.fileName.substring(0, 10) + '...' : image.fileName}
                            </span>
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                )}
                
                {/* –°—á–µ—Ç—á–∏–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ */}
                {detectedTools.length > 0 && (
                  <div className="mb-3 p-3 bg-green-50 border border-green-200 rounded-lg animate-fade-in-up">
                    <div className="flex items-center justify-between">
                      <span className="text-sm font-medium text-green-800">
                        –ù–∞–π–¥–µ–Ω–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤:
                      </span>
                      <span className="text-lg font-bold text-green-900">
                        {detectedTools.reduce((total, tool) => total + tool.quantity, 0)}
                      </span>
                    </div>
                  </div>
                )}
                
                <div className={`space-y-1 overflow-y-auto ${uploadedImages.length > 0 ? 'max-h-40' : 'max-h-48'}`}>
                  {detectedTools.length > 0 ? (
                    <div className="animate-slide-down">
                      {detectedTools.map((tool, index) => (
                        <div 
                          key={tool.id} 
                          className="flex items-center justify-between p-3 bg-gray-50 rounded-lg animate-fade-in-up group"
                          style={{ 
                            animationDelay: `${index * 0.1}s`,
                            animationFillMode: 'both'
                          }}
                        >
                          <div className="flex flex-col flex-1">
                            <span className="text-sm font-medium text-gray-900">{tool.name}</span>
                            {tool.serialNumber && (
                              <span className="text-xs text-gray-500">‚Ññ {tool.serialNumber}</span>
                            )}
                          </div>
                          <div className="flex items-center space-x-2">
                            <span className="text-sm text-gray-500">{tool.quantity} —à—Ç.</span>
                            <button
                              onClick={() => handleToolRemove(tool.id)}
                              className="opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 transition-colors duration-200 p-1 hover:bg-red-50 rounded"
                              title="–£–¥–∞–ª–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç"
                            >
                              <X className="w-4 h-4" />
                            </button>
                          </div>
                        </div>
                      ))}
                    </div>
                  ) : (
                    <div className="text-center py-4">
                      <p className="text-sm text-gray-500">–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤</p>
                    </div>
                  )}
                </div>
                
                {/* Buttons */}
                <div className="space-y-2 mt-auto">
                  {/* –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ */}
                  <button
                    onClick={handleAddManual}
                    className="w-full flex items-center justify-center space-x-2 px-3 py-2 border-2 border-dashed border-gray-300 rounded-lg text-sm text-gray-600 hover:border-green-400 hover:text-green-600 transition-colors"
                  >
                    <Plus size={16} />
                    <span>–î–æ–±–∞–≤–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –≤—Ä—É—á–Ω—É—é</span>
                  </button>
                  
                  {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è */}
                  <button 
                    onClick={handleScanComplete}
                    disabled={uploadedImages.length === 0 || isScanning}
                    className="w-full px-3 py-2 bg-green-600 text-white rounded-lg text-sm font-medium hover:bg-green-700 transition-colors flex items-center justify-center space-x-2 disabled:bg-gray-400 disabled:cursor-not-allowed"
                  >
                    <Check size={16} />
                    <span>
                      {isScanning ? `–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ... (${uploadedImages.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π)` : 
                       scanComplete ? '–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ' : 
                       `–ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ (${uploadedImages.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π)`}
                    </span>
                  </button>
                </div>
              </div>
            </div>

            {/* –ë–ª–æ–∫ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –º–æ–¥–µ–ª–∏ */}
            <ConfidenceBlock 
              confidence={confidence}
              onConfidenceChange={updateConfidence}
            />
          </div>
        </div>

        {/* Modal –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ */}
        <AddToolModal
          isOpen={isAddToolModalOpen}
          onClose={() => setIsAddToolModalOpen(false)}
          onAddTool={handleAddTool}
        />

        {/* –î–∏–∞–ª–æ–≥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å–¥–∞—á–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ */}
        {showReturnDialog && returnResult && (
          <ReturnResultsDialog
            result={returnResult}
            comparisonResult={comparisonResult}
            onClose={handleReturnDialogClose}
            onConfirm={handleReturnConfirm}
            currentStep={3}
            totalSteps={3}
            photoFileName={uploadedImages[0]?.fileName || 'DSCN4946.JPG'}
            uploadedImages={uploadedImages}
            imageMLResults={imageMLResults}
          />
        )}

      </div>
    </div>
  )
}
