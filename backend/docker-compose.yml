services:
  mvp_back_service:
    container_name: 'backend'
    build: 
      context: .
    ports:
      - "8000:8000"
    env_file:
       - .env
    environment:
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=${REDIS_DB}
    volumes:
      - ./src:/app/src
    depends_on:
      - redis
      - db

  db:
    container_name: postgres-db
    image: postgres:15-alpine
    restart: always
    env_file: ./.env
    environment:
        - POSTGRES_DB=${DB_NAME}
        - POSTGRES_USER=${DB_USER}
        - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
        - 5433:5432
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
        interval: 5s
        timeout: 30s
        retries: 3
  redis:
    container_name: redis_db
    image: redis:alpine
    restart: always
    env_file: ./.env
    environment:
    - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
    - 6379:6379
    command: redis-server --requirepass ${REDIS_PASSWORD}
    healthcheck:
        test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
        interval: 5s
        timeout: 30s
        retries: 3
